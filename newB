
# global -> object -> module?

Main = { $call = { id = 0 } }

{ # _ is not allowed!?, _ used to support space in dir
	test = { 1 2 x=3 y=4 5 a b c z = { 1 2 3 } } 
}
pass = { 1 2 3 4 5 } # mask?

Event = {
	id = 0
	#
	## ~~, ~~~ chk -> condition : ToBool4? - for all function?
	#
	# cf) $for - ToDo?? : using idx? [start, last]
	$for_each = {  # option - not change!?
		# eventID -> event -> $parameter? 
		
		eventID = { first_test } 
		dir = { $concat_all = { / _ / test } } # cf ) "test" for / / name that is empty!
		condition = {  # chk ~~~ and ~~ /
			AND = {
				EXISTITEMBYVALUE = { ~~~ root/pass }
				$event_result = { id = { bool_chk } x = { $getItemValue = { /// } } y = { //// } } # //// QoutedString?
			}
		}
	}
	
	$print = { data = { $return_value = { } } } 
	$print = { val = { \n } }
	$print2 = { dir = { /./ } }
	$print = { val = { \n } }
	$_getch = { }
}

Event = {
	id = bool_chk
	
	$parameter = { x y }
	
	$print = { value = { "test " } } 
	$print2 = { value = { $concat_all = { $move_up = { $parameter.y } test } } } # 여백 때문에 나누어 진다? - chk!! - ToDo
	$print = { value = { \n } }
	
	$return = { $COMP> = { $parameter.x 2 } }
}

Event = {
	id = first_test
	
	$parameter = { x }
	
	$if = { 
		condition = { $is_empty_string = { $item_name = { $parameter.x } } }
		then = {
			$return = { $multiple = { 10 $item_value = { $parameter.x } } }
		}
	}
	$return = { $concat_all2  = { $item_name = { $parameter.x } = $multiple = { 10 $item_value = { $parameter.x } } } }
}
